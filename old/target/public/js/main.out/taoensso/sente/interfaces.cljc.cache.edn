{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name taoensso.sente.interfaces, :imports nil, :requires {enc taoensso.encore, taoensso.encore taoensso.encore}, :cljs.spec/speced-vars [], :uses nil, :defs {IServerChan {:meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :line 13, :column 14, :end-line 13, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {sch-open? [[sch]], sch-close! [[sch]], sch-send! [[sch websocket? msg]]}}}, :protocol-symbol true, :name taoensso.sente.interfaces/IServerChan, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :end-column 25, :column 1, :line 13, :protocol-info {:methods {sch-open? [[sch]], sch-close! [[sch]], sch-send! [[sch websocket? msg]]}}, :info nil, :end-line 13, :tag any, :impls #{}, :doc nil, :jsdoc ("@interface")}, sch-open? {:protocol-inline nil, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :line 16, :column 4, :end-line 16, :end-column 13, :protocol taoensso.sente.interfaces/IServerChan, :doc "Returns true iff the channel is currently open.", :arglists (quote ([sch]))}, :protocol taoensso.sente.interfaces/IServerChan, :name taoensso.sente.interfaces/sch-open?, :variadic false, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :end-column 13, :method-params ([sch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sch])), :doc "Returns true iff the channel is currently open."}, sch-close! {:protocol-inline nil, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :line 17, :column 4, :end-line 17, :end-column 14, :protocol taoensso.sente.interfaces/IServerChan, :doc "If the channel is open when called: closes the channel and returns true.\n    Otherwise noops and returns false.", :arglists (quote ([sch]))}, :protocol taoensso.sente.interfaces/IServerChan, :name taoensso.sente.interfaces/sch-close!, :variadic false, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :end-column 14, :method-params ([sch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([sch])), :doc "If the channel is open when called: closes the channel and returns true.\n    Otherwise noops and returns false."}, sch-send! {:protocol-inline nil, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :line 20, :column 4, :end-line 20, :end-column 13, :protocol taoensso.sente.interfaces/IServerChan, :doc "If the channel is open when called: sends a message over channel and\n    returns true. Otherwise noops and returns false.", :arglists (quote ([sch websocket? msg]))}, :protocol taoensso.sente.interfaces/IServerChan, :name taoensso.sente.interfaces/sch-send!, :variadic false, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :end-column 13, :method-params ([sch websocket? msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([sch websocket? msg])), :doc "If the channel is open when called: sends a message over channel and\n    returns true. Otherwise noops and returns false."}, IServerChanAdapter {:meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :line 24, :column 14, :end-line 24, :end-column 32, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {ring-req->server-ch-resp [[sch-adapter ring-req callbacks-map]]}}}, :protocol-symbol true, :name taoensso.sente.interfaces/IServerChanAdapter, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :end-column 32, :column 1, :line 24, :protocol-info {:methods {ring-req->server-ch-resp [[sch-adapter ring-req callbacks-map]]}}, :info nil, :end-line 24, :tag any, :impls #{}, :doc nil, :jsdoc ("@interface")}, ring-req->server-ch-resp {:protocol-inline nil, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :line 27, :column 4, :end-line 27, :end-column 28, :protocol taoensso.sente.interfaces/IServerChanAdapter, :doc "Given a Ring request (WebSocket handshake or Ajax GET/POST), returns\n    a Ring response map with a web-server-specific channel :body that\n    implements Sente's IServerChan protocol.\n\n    Configures channel callbacks with a callbacks map using keys:\n      :on-open  - (fn [server-ch websocket?]) called exactly once after\n                  channel is available for sending.\n      :on-close - (fn [server-ch websocket? status]) called exactly once\n                  after channel is closed for any cause, incl. an explicit\n                  call to `close!`. `status` type is currently undefined.\n      :on-msg   - (fn [server-ch websocket? msg]) called for each String or\n                  byte[] message received from client.\n      :on-error - (fn [server-ch websocket? error]) currently unused.", :arglists (quote ([sch-adapter ring-req callbacks-map]))}, :protocol taoensso.sente.interfaces/IServerChanAdapter, :name taoensso.sente.interfaces/ring-req->server-ch-resp, :variadic false, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :end-column 28, :method-params ([sch-adapter ring-req callbacks-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([sch-adapter ring-req callbacks-map])), :doc "Given a Ring request (WebSocket handshake or Ajax GET/POST), returns\n    a Ring response map with a web-server-specific channel :body that\n    implements Sente's IServerChan protocol.\n\n    Configures channel callbacks with a callbacks map using keys:\n      :on-open  - (fn [server-ch websocket?]) called exactly once after\n                  channel is available for sending.\n      :on-close - (fn [server-ch websocket? status]) called exactly once\n                  after channel is closed for any cause, incl. an explicit\n                  call to `close!`. `status` type is currently undefined.\n      :on-msg   - (fn [server-ch websocket? msg]) called for each String or\n                  byte[] message received from client.\n      :on-error - (fn [server-ch websocket? error]) currently unused."}, IPacker {:meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :line 44, :column 14, :end-line 44, :end-column 21, :doc "Extension pt. for client<->server comms data un/packers:\n  arbitrary Clojure data <-> serialized strings.", :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {pack [[_ x]], unpack [[_ x]]}}}, :protocol-symbol true, :name taoensso.sente.interfaces/IPacker, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :end-column 21, :column 1, :line 44, :protocol-info {:methods {pack [[_ x]], unpack [[_ x]]}}, :info nil, :end-line 44, :tag any, :impls #{}, :doc "Extension pt. for client<->server comms data un/packers:\n  arbitrary Clojure data <-> serialized strings.", :jsdoc ("@interface")}, pack {:protocol-inline nil, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :line 47, :column 4, :end-line 47, :end-column 8, :protocol taoensso.sente.interfaces/IPacker, :doc nil, :arglists (quote ([_ x]))}, :protocol taoensso.sente.interfaces/IPacker, :name taoensso.sente.interfaces/pack, :variadic false, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :end-column 8, :method-params ([_ x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ x])), :doc nil}, unpack {:protocol-inline nil, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :line 48, :column 4, :end-line 48, :end-column 10, :protocol taoensso.sente.interfaces/IPacker, :doc nil, :arglists (quote ([_ x]))}, :protocol taoensso.sente.interfaces/IPacker, :name taoensso.sente.interfaces/unpack, :variadic false, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/taoensso/sente/interfaces.cljc", :end-column 10, :method-params ([_ x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ x])), :doc nil}}, :cljs.spec/registry-ref [], :require-macros {enc taoensso.encore, taoensso.encore taoensso.encore}, :doc "Alpha, subject to change.\n  Public interfaces / extension points."}