{:rename-macros {}, :renames {}, :externs {console {error {}, log {apply {}}, info {}}, Error {}}, :use-macros {}, :excludes #{}, :name weasel.repl, :imports nil, :requires {goog.dom goog.dom, brepl clojure.browser.repl, clojure.browser.repl clojure.browser.repl, weasel.impls.websocket weasel.impls.websocket, ws weasel.impls.websocket, gdom goog.dom, net clojure.browser.net, clojure.browser.net clojure.browser.net, event clojure.browser.event, cljs.reader cljs.reader, reader cljs.reader, clojure.browser.event clojure.browser.event}, :cljs.spec/speced-vars [], :uses {event-types clojure.browser.event, read-string cljs.reader}, :defs {ws-connection {:name weasel.repl/ws-connection, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :line 9, :column 1, :end-line 9, :end-column 29, :private true, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :line 9, :column 16, :end-line 9, :end-column 29, :private true}, :tag any}, alive? {:protocol-inline nil, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :line 11, :column 7, :end-line 11, :end-column 13, :arglists (quote ([]))}, :name weasel.repl/alive?, :variadic false, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, process-message {:name weasel.repl/process-message, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :line 16, :column 1, :end-line 16, :end-column 26, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :line 16, :column 11, :end-line 16, :end-column 26}, :tag cljs.core/MultiFn}, repl-print {:protocol-inline nil, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :line 41, :column 7, :end-line 41, :end-column 17, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name weasel.repl/repl-print, :variadic true, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, console-print {:protocol-inline nil, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :line 46, :column 7, :end-line 46, :end-column 20, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name weasel.repl/console-print, :variadic true, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, print-fns {:name weasel.repl/print-fns, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :line 49, :column 1, :end-line 49, :end-column 15, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :line 49, :column 6, :end-line 49, :end-column 15}, :tag cljs.core/IMap}, connect {:protocol-inline nil, :meta {:file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :line 56, :column 7, :end-line 56, :end-column 14, :arglists (quote ([repl-server-url & {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}}])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(repl-server-url {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}})], :arglists ([repl-server-url & {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}}]), :arglists-meta (nil)}}, :name weasel.repl/connect, :variadic true, :file "/home/es/.boot/cache/tmp/home/es/src/semente/3nm/-uzzx0a/public/js/main.out/weasel/repl.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(repl-server-url {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}})], :arglists ([repl-server-url & {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}}]), :arglists-meta (nil)}, :method-params [(repl-server-url {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists ([repl-server-url & {:keys [verbose on-open on-error on-close print], :or {verbose true, print :repl}}])}}, :cljs.spec/registry-ref [], :require-macros {reader cljs.reader, cljs.reader cljs.reader}, :cljs.analyzer/constants {:seen #{:closed :ready :eval-js :else :on-close :default :value :type :verbose :opened :op :print :success :status :result :repl :code :stacktrace :error :exception :console :on-error :hierarchy :on-open :message}, :order [:hierarchy :op :default :error :type :eval-js :code :value :result :status :stacktrace :exception :else :success :print :repl :console :verbose :on-open :on-error :on-close :opened :ready :message :closed]}, :doc nil}